<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Alexander Bulimov - production engineer's notes. - Alexander Bulimov</title><link>http://bulimov.ru/</link><description></description><lastBuildDate>Thu, 01 Feb 2018 00:00:00 +0300</lastBuildDate><item><title>My new Scale Models gallery</title><link>http://bulimov.ru/personal/models-gallery/</link><description>&lt;p&gt;I've just published my new site - personal &lt;a href="//models.bulimov.ru"&gt;Scale Models Gallery&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Model_building"&gt;Model making&lt;/a&gt; is my main and favorite hobby, so I've decided to build a whole new site just to write about it.&lt;/p&gt;
&lt;p&gt;I just love doing something without the computer, it's an awesome way to de-stress and detox.&lt;/p&gt;
&lt;p&gt;Also I love to make notes about things I do, read, watch or play. And one day I've just realized that I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 01 Feb 2018 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2018-02-01:/personal/models-gallery/</guid><category>Golang</category><category>Hugo</category></item><item><title>Benefits of upgradable laptops</title><link>http://bulimov.ru/personal/laptop-upgrade/</link><description>&lt;p&gt;I've been concerned by a low amount of memory in my &lt;strong&gt;Asus UX310U&lt;/strong&gt; laptop for quite a long time,
but as I used it quite lightly at home, it never became a problem. It has perfectly capable Intel i3-6100U CPU,
nice FullHD screen, 5h+ of battery life, so it made no sense to change the laptop just because of RAM.&lt;/p&gt;
&lt;p&gt;Obviously 4Gb of RAM is kind of low by modern …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Wed, 31 Jan 2018 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2018-01-31:/personal/laptop-upgrade/</guid><category>Experience</category></item><item><title>Python 3.6 f-strings rant</title><link>http://bulimov.ru/it/python3-fstrings/</link><description>&lt;p&gt;Python 3.6 introduced a new way to format strings, called
&lt;a href="https://docs.python.org/3.6/reference/lexical_analysis.html#f-strings"&gt;&lt;strong&gt;Formatted string literals&lt;/strong&gt;&lt;/a&gt;,
or just &lt;em&gt;f-strings&lt;/em&gt;. Everyone on the internet
seem to be happy about it. I'm definitely not.&lt;/p&gt;
&lt;p&gt;For starters, Python 3 already had 3 built-in ways of doing it before.
Just think about it... 3 ways to &lt;em&gt;format strings&lt;/em&gt; in language that declares simplicity as a goal:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There should be one-- and preferably only one --obvious way …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Mon, 24 Jul 2017 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2017-07-24:/it/python3-fstrings/</guid><category>Python</category><category>Programming</category><category>Rant</category><category>Golang</category></item><item><title>Refreshing slow internet experience</title><link>http://bulimov.ru/it/slow-internet/</link><description>&lt;p&gt;I've just returned from a vacation, and I've got quite refreshing experience
of using slow internet there.&lt;/p&gt;
&lt;p&gt;The thing is, we, as engineers, are used to fast internet, fast development environment, powerful laptops/smartphones, etc.&lt;/p&gt;
&lt;p&gt;Unfortunately this is still not the case of a huge part of the world,
and it's really important for us to try and walk in their shoes
from time to time. And one of my …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Sun, 23 Jul 2017 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2017-07-23:/it/slow-internet/</guid><category>Experience</category></item><item><title>What I read on the internet (2017 edition)</title><link>http://bulimov.ru/personal/what-i-read-2017/</link><description>&lt;p&gt;About a year ago I was asked in comments what do I read on the internet.
Back then, the list consisted from blogs of open-source products I've been using (like Atom, Elasticsearch, Icinga, Grafana), some personal blogs (Lennart Poettering, Aphyr, Julia Evans), some company blogs (Github Engineering) and basic tech press (Ars Techica, The Verge, Phoronix, LWN). And two mail lists - Devops Weekly and Golang Weekly.&lt;/p&gt;
&lt;p&gt;Now I've been asked …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 01 Jun 2017 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2017-06-01:/personal/what-i-read-2017/</guid><category>Blogs</category></item><item><title>Вопросы от Дениса</title><link>http://bulimov.ru/it/user-questions/</link><description>&lt;p&gt;Пришло письмо от читателя по имени Денис по форме обратной связи.
Поскольку никаких данных для связи с ним Денис не оставил, отвечу здесь.&lt;/p&gt;
&lt;p&gt;Привожу письмо полностью (надеюсь, автор не против):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Александр, здравствуйте! Не смог найти вашу электропочту, пишу через форму обратной связи вашего домена на рег.ру :)&lt;/p&gt;
&lt;p&gt;С огромным удовольствием читаю твой блог, очень жаль, что больше не обновляешь его.&lt;/p&gt;
&lt;p&gt;Помоги, пожалуйста, советом.
У меня примерно 12 виртуальных серверов с …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Sat, 27 May 2017 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2017-05-27:/it/user-questions/</guid><category>Monitoring</category><category>Icinga2</category><category>Graphite</category><category>Elasticsearch</category><category>Packetbeat</category></item><item><title>How I became a programmer</title><link>http://bulimov.ru/personal/how-i-became-a-programmer/</link><description>&lt;p&gt;After reading a lot of blog posts about becoming a programmer recently, I've decided to write my own.&lt;/p&gt;
&lt;p&gt;It will be a bit different because of two factors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I'm not a Software Engineer, but a Production Engineer/SRE/Admin;&lt;/li&gt;
&lt;li&gt;I'm from Russia, where CS education is vastly different.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;School years&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;School in Russia is 10 or 11 years and you start at the age of ~7  and end it at …&lt;/em&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Fri, 30 Sep 2016 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2016-09-30:/personal/how-i-became-a-programmer/</guid><category>Programming</category><category>Experience</category></item><item><title>Board games are awesome</title><link>http://bulimov.ru/personal/boardgames-love/</link><description>&lt;p&gt;&lt;em&gt;I's been awhile since I wrote anything in my blog, mostly because
I was moving to Ireland and was busy at my new job at Big Company™.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;So as I can't write about all the cool technical things we have there,
I'll try to make this blog less tech-savvy and more personal and fun.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As a normal IT person I spend whole working day staring at the computer's
screen. While …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Wed, 31 Aug 2016 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2016-08-31:/personal/boardgames-love/</guid><category>Board Games</category></item><item><title>Notes about type systems in popular languages</title><link>http://bulimov.ru/it/more-typing/</link><description>&lt;p&gt;I've been kind of out of my comfort zone last 3 weeks,
and was trying to use as many new languages and technologies as possible.&lt;/p&gt;
&lt;p&gt;I've used C++, JavaScript, React, PHP and &lt;a href="http://hacklang.org"&gt;Hack&lt;/a&gt; to name a few,
and I've noticed really cool thing - many popular programming
languages are moving towards mixing best of static and dynamic typing.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C++ (statically typed language) now has &lt;code&gt;auto&lt;/code&gt; keyword, specifying that compiler
should deduce …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 09 Jun 2016 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2016-06-09:/it/more-typing/</guid><category>Programming</category></item><item><title>Python Type Hints are awesome</title><link>http://bulimov.ru/it/python-typing/</link><description>&lt;p&gt;I really love &lt;a href="http://jvns.ca"&gt;Julia Evans's blog&lt;/a&gt;, she writes with such excitement
and enthusiasm about every new bit of technology she learns. For me, this is what
makes our job so great - we can learn something new and cool almost every day.&lt;/p&gt;
&lt;p&gt;And recently I've felt very excited with some of new abilities Python
now have. I'm talking about including of &lt;a href="https://www.python.org/dev/peps/pep-0484/"&gt;PEP 484&lt;/a&gt;,
which describes Type Hints, in Python 3.5 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 12 May 2016 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2016-05-12:/it/python-typing/</guid><category>Python</category><category>Programming</category></item><item><title>Moving from Fish shell to zsh</title><link>http://bulimov.ru/it/fish-zsh/</link><description>&lt;p&gt;I've been using &lt;a href="http://fishshell.com"&gt;Fish shell&lt;/a&gt; as my daily driver for
more than 2 years. I don't want to insult Fish - this awesome shell provided me
with wonderful out-of-the-box experience, introduced me to autosuggestions,
and required almost no configuration.&lt;/p&gt;
&lt;p&gt;But now, after 2 years of heavy usage, I've dropped it in favor of &lt;a href="https://en.wikipedia.org/wiki/Z_shell"&gt;zsh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The main reason for the switch is simple - Fish shell is not POSIX-compatible.
And while many people …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Fri, 06 May 2016 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2016-05-06:/it/fish-zsh/</guid><category>Fish</category><category>Zsh</category></item><item><title>Утилита gotests и плагин для Atom</title><link>http://bulimov.ru/it/atom-gotests/</link><description>&lt;p&gt;Поскольку последнее время я все больше пишу на &lt;a href="http://golang.org"&gt;Go&lt;/a&gt;,
мой workflow потихоньку обрастает различными полезными утилитами.&lt;/p&gt;
&lt;p&gt;Одним из лучших открытий (после изумительного &lt;a href="http://atom.io/packages/go-plus"&gt;go-plus&lt;/a&gt;
для &lt;a href="http://atom.io"&gt;Atom&lt;/a&gt;, который превращает Atom в полнофункциональную IDE
для Go) стала утилита &lt;a href="https://github.com/cweill/gotests"&gt;gotests&lt;/a&gt;, которая
позволяет генерировать &lt;a href="https://github.com/golang/go/wiki/TableDrivenTests"&gt;табличные тесты&lt;/a&gt;.
При этом для нее есть плагины для Sublime Text 3 и Emacs.&lt;/p&gt;
&lt;p&gt;Я большой сторонник юнит-тестирования, и потому возможность создавать шаблоны для
тестов одной командой меня очень обрадовала.&lt;/p&gt;
&lt;p&gt;Выглядит …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Fri, 15 Apr 2016 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2016-04-15:/it/atom-gotests/</guid><category>Golang</category><category>Программирование</category><category>Atom</category><category>ES6</category></item><item><title>Все для HAProxy в Atom</title><link>http://bulimov.ru/it/atom-haproxy/</link><description>&lt;p&gt;Появилась у меня на работе задачка - взять 3 относительно разных конфига
HAProxy, ответвившихся когда-то от общего предка, и обратно унифицировать их
в один.&lt;/p&gt;
&lt;p&gt;Конфиги хорошие, большие - 800 строк каждый.&lt;/p&gt;
&lt;p&gt;Приступил я к этой задаче, и сразу оступил - потому что в &lt;a href="http://atom.io"&gt;Atom&lt;/a&gt;,
которым я пользуюсь для редактирования всего, не было подсветки
синтаксиса конфигов HAProxy.&lt;/p&gt;
&lt;p&gt;Ну у нас же тут opensource, так что тут же был нагуглен архив с
&lt;a href="https://github.com/williamsjj/HAProxy.tmbundle"&gt;HAProxy.tmbundle&lt;/a&gt;, который …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Fri, 08 Apr 2016 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2016-04-08:/it/atom-haproxy/</guid><category>Golang</category><category>Программирование</category><category>Atom</category><category>HAProxy</category></item><item><title>Vendoring зависимостей в Go</title><link>http://bulimov.ru/it/go-vendoring/</link><description>&lt;p&gt;После недавнего &lt;a href="http://www.opennet.ru/opennews/art.shtml?num=44104"&gt;удаления модуля на 11 строк кода из npm&lt;/a&gt;,
которое сломало всю Node.js инфраструктуру, я по-новому взглянул на то,
как в проектах на Go реализованы зависимости от других пакетов.&lt;/p&gt;
&lt;p&gt;Изначально, при знакомстве с go я был крайне недоволен отсутствием возможности задавать зависимости
от конкретных версий (зависимость указывается только от репозитория, т.е. от master ветки) -
ведь апстрим может ломать обратную совместимость, и твой проект просто не соберется.
Причем …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 31 Mar 2016 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2016-03-31:/it/go-vendoring/</guid><category>Golang</category><category>Программирование</category></item><item><title>Проверка образов Docker на уязвимости с Clair</title><link>http://bulimov.ru/it/clair/</link><description>&lt;p&gt;Ни для кого не секрет, что контейнеры (и в частности Docker) не только решают
много проблем (configuration drift, scalability, dependency hell), но и привносят новые
(в частности, обновление базовых образов).&lt;/p&gt;
&lt;p&gt;Я уже давно мониторил IT-мир на предмет появления хорошего инструмента для
проверки &lt;a href="http://docker.com"&gt;Docker&lt;/a&gt;-образов на наличие известных CVE.
До недавнего времени подходящего инструмента не было. Была парочка дистро-специфичных
инструментов (например &lt;a href="https://github.com/OpenSCAP/container-compliance"&gt;oscap-docker&lt;/a&gt;,
с которым я помучался и забил), но ничего подходящего …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 24 Mar 2016 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2016-03-24:/it/clair/</guid><category>Clair</category><category>Docker</category><category>CoreOS</category></item><item><title>Открыл код db-checker</title><link>http://bulimov.ru/it/db-checker/</link><description>&lt;p&gt;Недавно я открыл код еще одного инструмента, который уже около года использую на работе -
&lt;a href="https://github.com/abulimov/db-checker"&gt;db-checker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Началось все с необходимости проводить регулярные проверки логической
целостности данных в БД. Проще говоря - гонять мониторингом запросы к базе.&lt;/p&gt;
&lt;p&gt;Сначала это была часть проекта, который проверял данные на нашем CDN.
Проект этот сразу планировался многопоточным, поэтому написан на &lt;a href="http://golang.org"&gt;Go&lt;/a&gt;.
Затем мухи были отделены от котлет, и проверка базы выделилась в отдельную
сущность, но несколько legacy-моментов …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Fri, 18 Mar 2016 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2016-03-18:/it/db-checker/</guid><category>Программирование</category><category>Golang</category><category>Nagios</category><category>Monitoring</category></item><item><title>О пользе Python и костылях с Docker</title><link>http://bulimov.ru/it/delete-docker-registry-image/</link><description>&lt;p&gt;В процессе организации авто-очистки &lt;a href="https://github.com/docker/distribution"&gt;Docker Registry 2&lt;/a&gt;,
устав ждать в появления в нем столь "ненужного" функционала, как удаление образов
с диска (DELETE запросы удаляют тег, но сами данные остаются на диске и жрут место),
я в очередной раз прибег к помощи скрипта из
&lt;a href="https://github.com/burnettk/delete-docker-registry-image"&gt;delete-docker-registry-image&lt;/a&gt;,
и уперся в то, что этот самый скрипт (написанный изначально на bash) невероятно
медленно работает на большом Registry.&lt;/p&gt;
&lt;p&gt;К примеру, удаления одного тега для repository с …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Wed, 02 Mar 2016 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2016-03-02:/it/delete-docker-registry-image/</guid><category>Программирование</category><category>Python</category><category>Docker</category></item><item><title>Рекомендую Advent Of Code</title><link>http://bulimov.ru/it/advent-of-code/</link><description>&lt;p&gt;Закончил на днях решать задачи из замечательного набора программерских
пазлов &lt;a href="http://adventofcode.com"&gt;Advent Of Code&lt;/a&gt; (да, я тормоз и даже пропустил
начало этого конкурса), и могу уверенно рекомендовать его любому.&lt;/p&gt;
&lt;p&gt;Задачки веселые, разнообразные, в меру сложные, содержат много
классических задач (&lt;a href="https://ru.wikipedia.org/wiki/Задача_коммивояжёра"&gt;задача коммивояжёра&lt;/a&gt;,
&lt;a href="https://ru.wikipedia.org/wiki/Задача_о_ранце"&gt;задача о ранце&lt;/a&gt; и т.д.) в занятной
обертке, так что их решение дает возможность отлично размять мозги.&lt;/p&gt;
&lt;p&gt;Так же эти задачки отлично подходят для изучения нового языка, чем я …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 11 Feb 2016 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2016-02-11:/it/advent-of-code/</guid><category>Программирование</category><category>Жизнь</category><category>Golang</category></item><item><title>Замена carbon-cache на go-carbon = Счастье</title><link>http://bulimov.ru/it/go-carbon/</link><description>&lt;p&gt;Пришлось на собственном опыте опробовать, насколько
&lt;a href="/it/graphite-experience"&gt;Graphite модульный&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;При 200k metricsReceived наш Graphite, работающий на довольном старом сервере
на обычных дисках, начал помирать. &lt;strong&gt;Carbon-cache&lt;/strong&gt; постоянно был в топе потребления
ресурсов, ни о какой отзывчивости в работе сервера речи вообще не шло.&lt;/p&gt;
&lt;p&gt;"Хватит это терпеть!" - подумал я, и начал в который раз искать советы по
тюнингу carbon для высокой производительности. В очередной раз ничего нового
не найдя, я решил попробовать давно …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Mon, 08 Feb 2016 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2016-02-08:/it/go-carbon/</guid><category>Graphite</category><category>go-carbon</category><category>Опыт</category></item><item><title>Немного житейского опыта</title><link>http://bulimov.ru/it/productivity-tips/</link><description>&lt;p&gt;Решил поделиться небольшим набором "капитанских" жизненных практик, каждая из которых
очень сильно упростила мне жизнь.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Использование сервиса для чтения новостей/RSS.&lt;/p&gt;
&lt;p&gt;Я очень долго игнорировал RSS, считая его пережитком прошлого, но когда создавал
&lt;a href="/IT/Личный-vps"&gt;свой VPS&lt;/a&gt;, поставил &lt;a href="https://tt-rss.org/"&gt;Tiny Tiny RSS&lt;/a&gt;
и попробовал попользоваться.&lt;/p&gt;
&lt;p&gt;Сложно даже описать, сколько это мне сэкономило времени. Это оказалось &lt;em&gt;настолько&lt;/em&gt;
удобно, что теперь я не представляю свою жизнь без подобного сервиса, хоть от tt-rss
и отказался вместе …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Tue, 12 Jan 2016 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2016-01-12:/it/productivity-tips/</guid><category>Жизнь</category><category>Опыт</category></item><item><title>Quis custodiet ipsos custodes?</title><link>http://bulimov.ru/it/who-watch-the-watchmen/</link><description>&lt;h4&gt;&lt;a href="https://ru.wikipedia.org/wiki/Quis_custodiet_ipsos_custodes%3F"&gt;Кто же устережёт самих сторожей?&lt;/a&gt;, или как (и зачем) я мониторю мониторинг.&lt;/h4&gt;
&lt;p&gt;Как вы понимаете, современный сервис мониторинга это очень сложная штука.
Некоторые, как &lt;a href="https://sensuapp.org"&gt;Sensu&lt;/a&gt;, выносят всю сложность во внешние
сервисы, и потому требуют установки и администрирования
&lt;a href="https://sensuapp.org/docs/latest/overview#sensu-components"&gt;нескольких компонентов&lt;/a&gt;,
таких как очередь и база данных.&lt;/p&gt;
&lt;p&gt;Остальные реализуют некоторый функционал этих компонентов сами,
упрощая администрирование мониторинга, но усложняя его внутреннее устройство.
К примеру, для работы &lt;a href="http://www.zabbix.com/ru/"&gt;Zabbix&lt;/a&gt; нужна только база,
а очереди …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Fri, 06 Nov 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2015-11-06:/it/who-watch-the-watchmen/</guid><category>Icinga2</category><category>Monit</category><category>Monitoring</category><category>Опыт</category></item><item><title>Избавился от CoreOS</title><link>http://bulimov.ru/it/goodby-coreos/</link><description>&lt;p&gt;С огромным облегчением сегодня убрал последний хост с &lt;a href="http://coreos.com"&gt;CoreOS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Я уже &lt;a href="/it/coreos-opinion/"&gt;писал&lt;/a&gt; о своих впечатлениях от CoreoOS, но с тех пор
впечатлений прибавилось.&lt;/p&gt;
&lt;p&gt;Частые атомарные обновления на бумаге выглядели вкусно (и в пользовательских
ОС типа Android работают прекрасно), но вот на практике на серверах
в том виде, в котором CoreOS их готовит, оказались совсем несъедобны.&lt;/p&gt;
&lt;p&gt;Объясню, в чем проблема: Docker достаточно часто что-то ломает в API, и свежие
ядра Linux …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Mon, 26 Oct 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2015-10-26:/it/goodby-coreos/</guid><category>CoreOS</category><category>Мнение</category><category>Опыт</category></item><item><title>Logstash и Graphite</title><link>http://bulimov.ru/it/logstash-graphite/</link><description>&lt;p&gt;Недавно читал серию постов от &lt;a href="https://www.datadoghq.com"&gt;Datadog&lt;/a&gt; про сбор метрик,
и в частности &lt;a href="https://www.datadoghq.com/blog/how-to-collect-nginx-metrics/"&gt;статью про метрики Nginx&lt;/a&gt;
(думал, вдруг что-то новое узнаю). Что меня в этой статье зацепило - так это то, что только версия
&lt;a href="https://www.nginx.com/products/"&gt;Nginx Plus&lt;/a&gt; показывает статистику количества
ответов, разделенную по HTTP-кодам. Поскольку я использую перед Nginx балансировщик
&lt;a href="http://www.haproxy.org"&gt;HAProxy&lt;/a&gt;, который не жадный и показывает подробную статистику
по кодам ответов для каждого бекенда и фронтенда, я о таком минусе статистики Nginx …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Fri, 09 Oct 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2015-10-09:/it/logstash-graphite/</guid><category>Graphite</category><category>Monitoring</category><category>Logstash</category><category>StatsD</category><category>Опыт</category></item><item><title>Заметка о Graphite</title><link>http://bulimov.ru/it/graphite-experience/</link><description>&lt;p&gt;На первый взгляд, кажется довольно странным, что сейчас, в 2015 году, все до сих пор используют
для хранения time series такой старый и «не модный» инструмент, как &lt;a href="http://graphite.readthedocs.org/en/latest/"&gt;Graphite&lt;/a&gt;.
О ужас, о нем даже почти не пишут в твиттере/G+ и он написан на старом будничном Python,
а не на популярном сейчас Go (хотя уже частично написан, но об этом потом).&lt;/p&gt;
&lt;p&gt;Но все равно многие используют его, и не сильно жалуются …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Fri, 25 Sep 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2015-09-25:/it/graphite-experience/</guid><category>Graphite</category><category>Monitoring</category><category>Мнение</category><category>Опыт</category></item><item><title>Плагин к Collectd для сбора метрик Riak CS</title><link>http://bulimov.ru/it/collectd-riakcs/</link><description>&lt;p&gt;На днях наконец-то дошли руки до модернизации той части мониторинга, которая
отвечает за сбор метрик, и набивший оскомину &lt;a href="http://munin-monitoring.org"&gt;Munin&lt;/a&gt; был
окончательно заменен на &lt;a href="https://graphite.readthedocs.org/en/latest/"&gt;Graphite&lt;/a&gt; + &lt;a href="http://collectd.org"&gt;Collectd&lt;/a&gt;.
Теперь воцарилась идиллия - Icinga2 складывает метрики из perfdata в Graphite,
и Collectd отправляет все метрики туда же.&lt;/p&gt;
&lt;p&gt;Хочется отдельно отметить, что несмотря на то, что изначально Collectd мне
не очень понравился (кому может сейчас понравиться Apache-подобный конфиг?), при
дальнейшем изучении я был приятно поражен богатством …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 17 Sep 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2015-09-17:/it/collectd-riakcs/</guid><category>Python</category><category>Riak CS</category><category>Collectd</category><category>Программирование</category><category>Monitoring</category></item><item><title>Использование ELK в продакшне</title><link>http://bulimov.ru/it/elk-production/</link><description>&lt;p&gt;Я уже довольно давно и успешно использую
&lt;a href="https://www.elastic.co/products/logstash"&gt;Logstash&lt;/a&gt; + &lt;a href="https://www.elastic.co/products/elasticsearch"&gt;Elasticsearch&lt;/a&gt;
с визуализацией данных в &lt;a href="https://www.elastic.co/products/kibana"&gt;Kibana&lt;/a&gt;
(общепринятое сокращение для этой тройки - ELK) для сбора, хранения и обработки логов,
но для обретения счастья с этой связкой мне потребовалось несколько итераций.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Поскольку в мире СПО все постоянно развивается и становится лучше, сразу хочу
отметить, что все описанное актуально для Logstash версиий 1.4-1.5 и
Elasticsearch версий 1.4 - 1.7 при нагрузке в …&lt;/em&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Tue, 11 Aug 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2015-08-11:/it/elk-production/</guid><category>Elasticsearch</category><category>Logstash</category><category>Kibana</category><category>Опыт</category></item><item><title>Впечатления от CoreOS</title><link>http://bulimov.ru/it/coreos-opinion/</link><description>&lt;p&gt;На волне популярности контейнерной виртуализации &lt;a href="http://docker.com"&gt;Docker&lt;/a&gt;
стали появляться специализированные дистрибутивы Linux, созданные специально
для использования в роли базового хоста для Docker-контейнеров.&lt;/p&gt;
&lt;p&gt;Пионером среди них стал проект &lt;a href="http://coreos.com"&gt;CoreOS&lt;/a&gt;, затем появились
&lt;a href="http://www.projectatomic.io/"&gt;Project Atomic&lt;/a&gt; от RedHat и
&lt;a href="https://developer.ubuntu.com/en/snappy/"&gt;Ubuntu Snappy&lt;/a&gt; от Canonical.&lt;/p&gt;
&lt;p&gt;Чем они все отличаются от привычных дистрибутивов? Основным отличием является
модель обновления дистрибутива. Все эти проекты предлагают атомарные обновления,
подразумевающие сборку нового образа системы с последующей перезагрузкой в него.
При этом образ …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Wed, 29 Jul 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2015-07-29:/it/coreos-opinion/</guid><category>CoreOS</category><category>Мнение</category></item><item><title>Прощай, личный VPS</title><link>http://bulimov.ru/it/goodby-vps/</link><description>&lt;p&gt;Больше года назад я &lt;a href="/it/Личный-vps"&gt;стал использовать свой виртуальный частный сервер(VPS)&lt;/a&gt;,
но недавно с полной ясностью осознал, что несмотря на то, что я регулярно пользуюсь
многими сервисами на своем сервере, сам VPS приносит мне только негативные эмоции.&lt;/p&gt;
&lt;p&gt;Необходимость следить за этим сервером, обновлять на нем софт, решать мелкие
проблемы после обновлений - все это стало меня бесить. Возможно, это возраст
(ха-ха), но возни с серверами мне хватает на работе, причем задачи …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 09 Jul 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2015-07-09:/it/goodby-vps/</guid><category>VPS</category><category>Жизнь</category></item><item><title>Попробуйте Packetbeat</title><link>http://bulimov.ru/it/try-packetbeat/</link><description>&lt;p&gt;Вчера в &lt;a href="https://www.elastic.co/blog"&gt;блоге Elasticsearch&lt;/a&gt; появилась отличная
новость - проект &lt;a href="https://www.elastic.co/products/beats/packetbeat"&gt;Packetbeat&lt;/a&gt;,
развиваемый до этого энтузиастами, присоединился к &lt;a href="https://www.elastic.co"&gt;Elastic&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Я уже довольно давно слежу за этим проектом, и теперь, когда можно не
беспокоиться о его будущем, хочу о нем рассказать.&lt;/p&gt;
&lt;p&gt;Packetbeat это такой инструмент мониторинга, который работает как анализатор
сетевых пакетов, парсит различные протоколы (сейчас поддерживаются HTTP, MySQL,
Postgresql, Redis, Thrift-RPC), получает нужные данные, и отсылает их либо напрямую
в Elasticsearch, либо в …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 28 May 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2015-05-28:/it/try-packetbeat/</guid><category>Packetbeat</category><category>Elasticsearch</category><category>Kibana</category><category>Monitoring</category></item><item><title>Сменил Vim на Atom</title><link>http://bulimov.ru/it/vim-atom/</link><description>&lt;p&gt;Вот уже почти два месяца, как я по совету коллеги сменил Vim, которым
пользовался уже 5 лет, и который оброс у меня кучей плагинов,
на &lt;a href="http://atom.io"&gt;Github Atom&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Использую я его как раньше Vim - для всего. В основном это написание
плейбуков &lt;a href="http://www.ansible.com/"&gt;Ansible&lt;/a&gt;, что включает в себя правку конфигов,
и написание кода на &lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt; и &lt;a href="http://golang.org/"&gt;Go&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Сразу скажу, что не будь для Atom вменяемого vim-режима, я бы вряд ли
решился на переход …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 21 May 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2015-05-21:/it/vim-atom/</guid><category>Vim</category><category>Atom</category><category>Жизнь</category></item><item><title>Улучшаем сообщения от мониторинга с помощью cAdvisor-companion</title><link>http://bulimov.ru/it/cadvisor-companion/</link><description>&lt;p&gt;Слышали ли вы когда-нибудь о такой практике, как "Monitoring Events Enrichment"?
Если вкратце, то это практика наполнения дополнительной информацией сообщений
от мониторинга, так что на выяснение причины проблемы уходит меньше времени
и телодвижений.&lt;/p&gt;
&lt;p&gt;Есть даже контора, которая помогает внедрять эту практику на коммерческой основе,
у них на &lt;a href="http://www.eventenrichment.com/"&gt;сайте&lt;/a&gt; есть неплохие примеры того,
что и зачем можно добавить к обычному сообщению от Nagios.&lt;/p&gt;
&lt;p&gt;Сама эта идея мне очень нравится, и вот …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Tue, 21 Apr 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2015-04-21:/it/cadvisor-companion/</guid><category>Golang</category><category>cAdvisor</category><category>cAdvisor-companion</category><category>Программирование</category><category>Monitoring</category></item><item><title>Балансировка в HAProxy на основе данных cAdvisor</title><link>http://bulimov.ru/it/haproxy-cadvisor/</link><description>&lt;p&gt;Для запуска Docker-контейнеров у меня в данный момент выделено достаточно много
серверов, причем аппаратная часть у некоторых из них отличается
друг от друга. Соответственно, при настройке на чудесном балансировщике
&lt;a href="http://www.haproxy.org/"&gt;HAProxy&lt;/a&gt; такого параметра балансировки
как &lt;em&gt;"вес сервера"&lt;/em&gt;, приходится это различие в аппаратной части учитывать.&lt;/p&gt;
&lt;p&gt;Можно, конечно, подобрать значения весов самостоятельно на основе
данных мониторинга, а при появлении нагрузки от соседних Docker-контейнеров
эти веса корректировать, но это не наш метод.&lt;/p&gt;
&lt;p&gt;Не так …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Wed, 15 Apr 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2015-04-15:/it/haproxy-cadvisor/</guid><category>HAProxy</category><category>cAdvisor</category><category>Python</category><category>Программирование</category></item><item><title>Открыл для себя cVim для Google Chrome</title><link>http://bulimov.ru/it/chromium-vim/</link><description>&lt;p&gt;Последние 4 года я использую Vim в качестве текстового редактора и IDE, и все это время
я использовал браузер Mozilla Firefox с дополнением &lt;a href="http://www.vimperator.org/vimperator"&gt;Vimperator&lt;/a&gt;,
либо с его форком - &lt;a href="http://5digits.org/pentadactyl/"&gt;Pentadactyl&lt;/a&gt;, для получения
аналогичной навигации в браузере. Без функционала этих дополнений я как без рук,
и потому никак не мог использовать Google Chrome/Chromium.&lt;/p&gt;
&lt;p&gt;Дополнения типа Vimum/Vrome/ViChrome, которые добавляют vi-like навигацию
в Chrome, после Vimperator казались, мягко говоря, недоделанными,
и …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Fri, 27 Feb 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2015-02-27:/it/chromium-vim/</guid><category>Жизнь</category><category>Vim</category></item><item><title>Мониторим Docker-контейнеры с cAdvisor и Nagios/Icinga2</title><link>http://bulimov.ru/it/check-cadvisor/</link><description>&lt;p&gt;После того, как я &lt;a href="/it/check-docker-memory"&gt;научился мониторить память в Docker-контейнерах&lt;/a&gt;,
я решил мониторить еще и нагрузку на CPU.
Поскольку это дело не самое тривиальное, и хотелось не писать свой
велосипед, а пользоваться чем-то популярным и поддерживаемым, я решил
попробовать &lt;a href="https://github.com/google/cadvisor"&gt;cAdvisor&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;И вот что я могу сказать - отличный инструмент!
Ресурсов практически не потребляет (около 20 Мб оперативной памяти и
неизмеримо мало CPU), обладает простым API для доступа к собираемой им
информации, имеет …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Fri, 20 Feb 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2015-02-20:/it/check-cadvisor/</guid><category>Python</category><category>Nagios</category><category>Icinga2</category><category>cAdvisor</category><category>Monitoring</category></item><item><title>Научился мониторить использование памяти в Docker-контейнерах</title><link>http://bulimov.ru/it/check-docker-memory/</link><description>&lt;p&gt;Я сегодня занимался мониторингом, а конкретно нашими докер-контейнерами.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Лирическое отступление:
Для мониторинга я теперь (уже на другом месте работы) использую
наследника Nagios - &lt;a href="https://www.icinga.org/icinga/icinga-2/"&gt;Icinga2&lt;/a&gt;.
Пока все нравится, ребята очень круто переписали Nagios, реализовали гораздо
более вменяемый формат конфигурации, и кучу новых возможностей.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Используя Docker для автотестов я уже ловил проблемы, когда интерпретатор Ruby
кушал всю выделенную память в контейнере и тихо умирал от рук OOM Killer.&lt;/p&gt;
&lt;p&gt;Поскольку теперь я использую &lt;a href="http://docker.io"&gt;Docker …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Fri, 13 Feb 2015 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2015-02-13:/it/check-docker-memory/</guid><category>Python</category><category>Nagios</category><category>Icinga2</category><category>Monitoring</category></item><item><title>Lyrics Tagger</title><link>http://bulimov.ru/it/lyricstagger/</link><description>&lt;h2&gt;Предыстория&lt;/h2&gt;
&lt;p&gt;Я езжу на работу в общественном транспорте, и слушаю там музыку
со смартфона. Достаточно часто хотелось почитать тексты прослушиваемых
в данный момент песен, но искать их в интернете было не слишком удобно,
да и вообще интернета до недавнего времени в метро не было.&lt;/p&gt;
&lt;p&gt;Решение выглядит очевидным - надо встроить тексты песен в сами музыкальные файлы.
Благо, основные форматы это позволяют.
Музыку я храню во &lt;a href="https://ru.wikipedia.org/wiki/FLAC"&gt;FLAC&lt;/a&gt;, а на смартфон
закидываю в …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Tue, 25 Nov 2014 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-11-25:/it/lyricstagger/</guid><category>Python</category><category>Программирование</category></item><item><title>Удобная настройка Sensu с Ansible</title><link>http://bulimov.ru/it/ansible-sensu/</link><description>&lt;p&gt;Так как я использую &lt;a href="http://sensuapp.org/"&gt;Sensu&lt;/a&gt; для мониторинга,
и &lt;a href="http://www.ansible.com/"&gt;Ansible&lt;/a&gt; для управления конфигурациями,
то конечно же я настраиваю Sensu с помощью Ansible.&lt;/p&gt;
&lt;p&gt;В этой связке меня смущало только одно - Sensu использует
&lt;a href="https://ru.wikipedia.org/wiki/JSON"&gt;JSON&lt;/a&gt; для конфигов,
в то время как Ansible использует &lt;a href="https://ru.wikipedia.org/wiki/YAML"&gt;YAML&lt;/a&gt;.
Поскольку JSON является подмножеством YAML, и описывать
конфигурации в YAML гораздо проще (никаких проблем с запятыми, скобочками),
хотелось писать в YAML и транслировать в JSON.&lt;/p&gt;
&lt;p&gt;Начал я, конечно, с использования …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 13 Nov 2014 00:00:00 +0300</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-11-13:/it/ansible-sensu/</guid><category>Ansible</category><category>Sensu</category><category>Monitoring</category></item><item><title>Разбирался с page-cache в Linux</title><link>http://bulimov.ru/it/meminfo-visualizer/</link><description>&lt;p&gt;Читая книгу &lt;a href="http://www.williamspublishing.com/Books/5-8459-1085-4.html"&gt;"Разработка ядра Linux"&lt;/a&gt; за авторством Роберта Лава,
я решил поглубже разобраться в том, как работает кэш в Linux,
и набрел на вот &lt;a href="http://habrahabr.ru/company/yandex/blog/231957/"&gt;эту&lt;/a&gt;
статью на Хабре от Яндекса.&lt;/p&gt;
&lt;p&gt;Сама статья весьма познавательна, особенно видео - рекомендую.
Так вот, в этом видео &lt;em&gt;Роман Гущин&lt;/em&gt;, с помощью простой утилиты, наглядно показывающей
размер кэша, показывал как работает файловый кэш.&lt;/p&gt;
&lt;p&gt;Конечно, мне захотелось в образовательных целях написать такую утилиту для себя,
чтобы можно …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 09 Oct 2014 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-10-09:/it/meminfo-visualizer/</guid><category>Kernel</category><category>Python</category><category>Программирование</category><category>Книги</category></item><item><title>Инфраструктура как код</title><link>http://bulimov.ru/it/infrastructure-as-a-code/</link><description>&lt;p&gt;Есть такой тренд сейчас - работать с IT-инфраструктурой как с кодом.
Хорошо цель этого метода описывается этой цитатой:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Enable the reconstruction of the business from nothing but a source code repository, an application data backup, and bare metal resources”&lt;/p&gt;
&lt;p&gt;-- Jesse Robins&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Я полностью поддерживаю эту идею, причем именно в этой трактовке.&lt;/p&gt;
&lt;p&gt;Если говорить про парадигму, которую нам предлагает этот метод, то вот она:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Поддерживать модульную, легко поддающуюся автоматизации инфраструктуру,
и &lt;em&gt;описывать …&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Mon, 29 Sep 2014 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-09-29:/it/infrastructure-as-a-code/</guid><category>Chef</category><category>Ansible</category><category>Мнение</category></item><item><title>s/Ruhoh/Pelican/</title><link>http://bulimov.ru/it/from-ruhoh-to-pelican/</link><description>&lt;p&gt;Переехал с &lt;a href="http://ruhoh.com"&gt;Ruhoh&lt;/a&gt; на &lt;a href="http://getpelican.com"&gt;Pelican&lt;/a&gt;,
потому что Python.&lt;/p&gt;
&lt;p&gt;А если подробнее - потому что Ruhoh написан на Ruby, и не особо развивается.
А Pelican написан на Python, который является моим основным языком,
и уже давно и активно развивается, и обладает обширной базой
&lt;a href="https://github.com/getpelican/pelican-plugins"&gt;плагинов&lt;/a&gt; и
&lt;a href="https://github.com/getpelican/pelican-themes"&gt;тем&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 25 Sep 2014 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-09-25:/it/from-ruhoh-to-pelican/</guid><category>Pelican</category><category>Python</category><category>Жизнь</category></item><item><title>Выложил немного полезностей</title><link>http://bulimov.ru/it/%D0%92%D1%8B%D0%BB%D0%BE%D0%B6%D0%B8%D0%BB-%D0%BD%D0%B5%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9/</link><description>&lt;p&gt;Когда я писал про то, как &lt;a href="/it/Переписал-скрипты-на-ruby-для-sensu"&gt;переписал скрипты для Sensu&lt;/a&gt;,
я слегка слукавил. Изначально, я написал эти скрипты на Python,
и только потом на Ruby. Поскольку пользователям других Nagios-совместимых
систем мониторинга может показаться неудобным использование ruby-скриптов,
да еще и с зависимостью от гема sensu-plugin, я решил выложить
и Python-версии скриптов.&lt;/p&gt;
&lt;p&gt;Если кому хочется мониторить состояние дисков в raid-контроллерах от 3ware или
HP SmartArray на чистом Python - милости просим, все
&lt;a href="https://github.com/abulimov/utils/tree/master/nagios"&gt;в …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Wed, 17 Sep 2014 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-09-17:/it/Выложил-немного-полезностей/</guid><category>Python</category><category>Zabbix</category><category>Nagios</category><category>Monitoring</category></item><item><title>Открыл для себя плагины к tmux</title><link>http://bulimov.ru/it/%D0%9E%D1%82%D0%BA%D1%80%D1%8B%D0%BB-%D0%B4%D0%BB%D1%8F-%D1%81%D0%B5%D0%B1%D1%8F-%D0%BF%D0%BB%D0%B0%D0%B3%D0%B8%D0%BD%D1%8B-%D0%BA-tmux/</link><description>&lt;p&gt;Случилось чудесное - &lt;a href="http://linux.org.ru"&gt;LOR&lt;/a&gt; принес мне пользу.
Оттуда я узнал о плагине &lt;a href="https://github.com/tmux-plugins/tmux-resurrect"&gt;tmux-resurrect&lt;/a&gt;,
а точнее, вообще о существовании плагинов для чудесного мультиплексора терминалов &lt;strong&gt;tmux&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;С помощью имеющихся плагинов можно привести конфигурацию в более понятный вид,
а также заменить свои костыли на костыли, поддерживаемые сообществом.&lt;/p&gt;
&lt;p&gt;Я, к примеру:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;сильно сократил конфигурацию, используя
  &lt;a href="https://github.com/tmux-plugins/tmux-sensible"&gt;tmux-sensible&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;с помощью &lt;a href="https://github.com/tmux-plugins/tmux-yank"&gt;tmux-yank&lt;/a&gt;
  выкинул свои костыли для копирования в буфер обмена;&lt;/li&gt;
&lt;li&gt;смог убрать настройки для vi-образной навигации между панелями …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 04 Sep 2014 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-09-04:/it/Открыл-для-себя-плагины-к-tmux/</guid><category>tmux</category><category>Жизнь</category></item><item><title>Переписал скрипты на Ruby для Sensu</title><link>http://bulimov.ru/it/%D0%9F%D0%B5%D1%80%D0%B5%D0%BF%D0%B8%D1%81%D0%B0%D0%BB-%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82%D1%8B-%D0%BD%D0%B0-ruby-%D0%B4%D0%BB%D1%8F-sensu/</link><description>&lt;p&gt;Поскольку я перевел мониторинг с Zabbix на Sensu, пришлось переписать
свои &lt;a href="/it/Низкоуровневое-обнаружение-в-zabbix-ищем-диски-в-контроллере-от-3ware"&gt;скрипты&lt;/a&gt; проверки состояния жестких дисков в raid-контроллерах от 3ware и
HP SmartArray для использования в Sensu. Ну а раз все равно переписывать - то
писать я решил на Ruby, чтобы можно было без проблем
заслать в &lt;a href="https://github.com/sensu/sensu-community-plugins"&gt;sensu-community-plugins&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Скрипты весьма просты, так что проблем при переписывании никаких не было.&lt;/p&gt;
&lt;p&gt;Если кому надо - все уже отдано сообществу, теперь Sensu может мониторить
состояние …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 04 Sep 2014 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-09-04:/it/Переписал-скрипты-на-ruby-для-sensu/</guid><category>Ruby</category><category>Sensu</category><category>Monitoring</category></item><item><title>Модуль zabbix_maintenance</title><link>http://bulimov.ru/it/%D0%9C%D0%BE%D0%B4%D1%83%D0%BB%D1%8C-zabbix_maintenance/</link><description>&lt;p&gt;Свершилось чудо, и мой &lt;a href="https://github.com/ansible/ansible/blob/devel/library/monitoring/zabbix_maintenance"&gt;модуль&lt;/a&gt;
для Ansible, который умеет создавать и удалять периоды "в обслуживании" в Zabbix,
наконец-то &lt;a href="https://github.com/ansible/ansible/pull/5062"&gt;приняли&lt;/a&gt; в апстрим.
Это уже третий мой модуль, принятый в апстрим Ansible.&lt;/p&gt;
&lt;p&gt;Краткая история:&lt;/p&gt;
&lt;p&gt;Модуль этот я запушил еще в 26 ноября 2013 года, но 21 декабря
&lt;a href="https://github.com/cove"&gt;cove&lt;/a&gt; написал в комментарии к моему модулю,
что планирует выложить целую &lt;a href="https://github.com/ansible/ansible/pull/6034"&gt;пачку&lt;/a&gt;
модулей для взаимодействия с Zabbix из Ansible.
Это отложило принятие моего модуля в …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Mon, 11 Aug 2014 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-08-11:/it/Модуль-zabbix_maintenance/</guid><category>Ansible</category><category>Python</category><category>Monitoring</category></item><item><title>Ansible и serverspec</title><link>http://bulimov.ru/it/ansible-%D0%B8-serverspec/</link><description>&lt;p&gt;Когда я готовил playbook для &lt;a href="/it/Личный-vps"&gt;своего VPS&lt;/a&gt;, я взял за основу
&lt;a href="https://github.com/al3x/sovereign"&gt;Sovereign&lt;/a&gt;. В этом репозитории меня
заинтересовал файл &lt;strong&gt;tests.py&lt;/strong&gt;, содержащий тесты для результирующего сервера.
У меня сразу же возник вопрос - почему тесты самописные, на голом Python, а
не на каком-нибудь готовом решении. Я решил изучить, что же есть сейчас для
TDD-администрирования. Оказалось, что толком ничего и нет, а то, что
есть - для Ansible не особо нужно.&lt;/p&gt;
&lt;p&gt;Для начала, что …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 22 May 2014 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-05-22:/it/ansible-и-serverspec/</guid><category>Ansible</category><category>serverspec</category><category>Мнение</category></item><item><title>Личный VPS</title><link>http://bulimov.ru/it/%D0%9B%D0%B8%D1%87%D0%BD%D1%8B%D0%B9-vps/</link><description>&lt;p&gt;Уже 2 недели как я начал использовать свой личный VPS на DigitalOcean, и хочу
поделиться впечатлениями.
Это оказалось очень удобно - можно получать все удобства современного
цифрового мира, но на своих условиях и с уверенностью в сохранности своих
персональных данных.&lt;/p&gt;
&lt;p&gt;Раскатывал я все сервисы и конфиги с помощью &lt;a href="http://ansible.com"&gt;Ansible&lt;/a&gt;, взяв за
основу &lt;a href="https://github.com/al3x/sovereign"&gt;Sovereign&lt;/a&gt;.
В качестве дистрибутива я ради эксперимента выбрал Ubuntu 14.04 LTS.&lt;/p&gt;
&lt;p&gt;Сейчас я использую VPS для следующих сервисов …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 22 May 2014 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-05-22:/it/Личный-vps/</guid><category>VPS</category><category>Ubuntu</category></item><item><title>Прочитал The Phoenix Project: A Novel About DevOps, and Helping Your Business Win</title><link>http://bulimov.ru/it/%D0%9F%D1%80%D0%BE%D1%87%D0%B8%D1%82%D0%B0%D0%BB-the-phoenix-project-a-novel-about-devops-and-helping-your-business-win/</link><description>&lt;p&gt;Ну что тут скажешь - прекрасная книга. Написана живым языком, очень легко читается.
В увлекательной форме рассказывает о ключевых принципах DevOps,
причем именно так, чтобы было понятно, в ответ на какие проблемы каждый
из принципов был сформирован.&lt;/p&gt;
&lt;p&gt;Конечно, главная проблема книги в том, что DevOps преподносится как
некая чудодейственная методология, и при этом не уделяется внимания
главному вопросу - кадровому. В книге все сотрудники оказались
достаточно квалифицированными и открытыми для того, чтобы …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Tue, 15 Apr 2014 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-04-15:/it/Прочитал-the-phoenix-project-a-novel-about-devops-and-helping-your-business-win/</guid><category>Книги</category><category>Жизнь</category><category>Мнение</category></item><item><title>Сдал экзамен Cisco ICND2, он же 200-101</title><link>http://bulimov.ru/it/%D0%A1%D0%B4%D0%B0%D0%BB-%D1%8D%D0%BA%D0%B7%D0%B0%D0%BC%D0%B5%D0%BD-cisco-icnd2-%D0%BE%D0%BD-%D0%B6%D0%B5-200-101/</link><description>&lt;p&gt;Теперь я CCNA.&lt;/p&gt;
&lt;p&gt;Сдал с трудом, 867 из 1000 при проходных 825.
Экзамен очень мощный, сильно сложнее ICND1, на мой вкус.
Надо было сдавать единый 200-120, было бы сильно проще.
Еще больше уверился, что CCNA вполне подходит на роль
критерия профпригодности для более-менее серьезной
работы сисадмина.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 03 Apr 2014 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-04-03:/it/Сдал-экзамен-cisco-icnd2-он-же-200-101/</guid><category>Cisco</category><category>Жизнь</category></item><item><title>Сдал экзамен Cisco ICND1, он же 100-101</title><link>http://bulimov.ru/it/%D0%A1%D0%B4%D0%B0%D0%BB-%D1%8D%D0%BA%D0%B7%D0%B0%D0%BC%D0%B5%D0%BD-cisco-icnd1-%D0%BE%D0%BD-%D0%B6%D0%B5-100-101/</link><description>&lt;p&gt;Сдавал через месяц после курсов ICND1 и ICND2, набрал 907.
Экзамен хороший, мощный. Теперь вполне понимаю,
почему многими сданный CCNA расценивается как некое мерило
профпригодности.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 20 Mar 2014 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-03-20:/it/Сдал-экзамен-cisco-icnd1-он-же-100-101/</guid><category>Cisco</category><category>Жизнь</category></item><item><title>Тестирование Ansible Playbook</title><link>http://bulimov.ru/it/%D0%A2%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-ansible-playbook/</link><description>&lt;p&gt;Давно хотел сделать авто-тестирование целостности развертывания, производимого
с помощью &lt;a href="http://ansible.com"&gt;Ansible&lt;/a&gt;. Чтобы, значит, запушил я новую версию плейбука в репозитория,
и CI проверила работоспособность системы. Причем не просто корректность синтаксиса,
а работоспособность проводимого деплоя.&lt;/p&gt;
&lt;p&gt;Вот наконец до этого дошли руки.&lt;/p&gt;
&lt;p&gt;Точнее, руки до этого дошли еще в середине 2013 года, но тогда я собрал все это
с помощью стройной системы костылей, взяв за основу заранее минимально
сконфигуренные qemu-образы на lvm-снапшотах.&lt;/p&gt;
&lt;p&gt;Теперь …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 13 Mar 2014 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-03-13:/it/Тестирование-ansible-playbook/</guid><category>Ansible</category><category>Мнение</category></item><item><title>Влияние курсов Cisco на психику</title><link>http://bulimov.ru/it/%D0%92%D0%BB%D0%B8%D1%8F%D0%BD%D0%B8%D0%B5-%D0%BA%D1%83%D1%80%D1%81%D0%BE%D0%B2-cisco-%D0%BD%D0%B0-%D0%BF%D1%81%D0%B8%D1%85%D0%B8%D0%BA%D1%83/</link><description>&lt;p&gt;Закончил курсы Cisco ICND1 и ICND2, и сразу захотелось странного.
Захотелось домой какую-нибудь интересную сетевую железяку.
Быстрый поиск по каталогам серьезных фирм типа Cisco и Juniper показал, что
ничего вменяемого для домашнего использования у них нет
(Cisco Linksys я за вменяемое не считаю, та же фигня, что и D-Link или Asus).
В итоге этих метаний, выбор пал на оборудование фирмы MikroTik.&lt;/p&gt;
&lt;p&gt;Движимый душевным порывом, я поменял
свой древний WiFi роутер …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Wed, 05 Mar 2014 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-03-05:/it/Влияние-курсов-cisco-на-психику/</guid><category>Cisco</category><category>MikroTik</category></item><item><title>Побывал на DevOps Meetup 25 января</title><link>http://bulimov.ru/it/%D0%9F%D0%BE%D0%B1%D1%8B%D0%B2%D0%B0%D0%BB-%D0%BD%D0%B0-devops-meetup-25-%D1%8F%D0%BD%D0%B2%D0%B0%D1%80%D1%8F/</link><description>&lt;p&gt;Из четырех докладов именно доклад про Docker, ради которого
я и ходил на этот Meetup, оказался единственным плохим.
Вышел какой-то мальчик из Яндекса, жутко заунывно
рассказывал банальности про Docker, на все интересные
вопросы отвечал "я не знаю".&lt;/p&gt;
&lt;p&gt;Зато остальные доклады были весьма хороши.
Лично меня особенно порадовал доклад Ивана Евтуховича
про librarian и Berkshelf. Порадовал тем, что Иван выразил
мою позицию по поводу community-кукбуков.&lt;/p&gt;
&lt;p&gt;Вячеслав Кузнецов прочитал отличный доклад о …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Mon, 27 Jan 2014 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2014-01-27:/it/Побывал-на-devops-meetup-25-января/</guid><category>Жизнь</category></item><item><title>Расширяем возможности Nginx с помощью Lua</title><link>http://bulimov.ru/it/%D0%A0%D0%B0%D1%81%D1%88%D0%B8%D1%80%D1%8F%D0%B5%D0%BC-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-nginx-%D1%81-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-lua/</link><description>&lt;p&gt;Встала некоторое время назад передо мной задача -
фильтровать по полю Serial клиентские сертификаты,
которые используются для авторизации на одном из сервисов.
То есть не просто проверять сертификат, но еще и проверять
наличие серийника в списке разрешенных, на случай утечки клиентского
сертификата. Сертификаты выдаем не мы, так что отзывать не можем,
и списка отозванных тоже нет.&lt;/p&gt;
&lt;p&gt;Решать я эту задачу стал с помощью Nginx, и почти сразу был
слеплен вариант тупой …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Fri, 08 Nov 2013 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2013-11-08:/it/Расширяем-возможности-nginx-с-помощью-lua/</guid><category>Nginx</category><category>Lua</category></item><item><title>Auto-backup конфигов активки через Rancid</title><link>http://bulimov.ru/it/auto-backup-%D0%BA%D0%BE%D0%BD%D1%84%D0%B8%D0%B3%D0%BE%D0%B2-%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BA%D0%B8-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-rancid/</link><description>&lt;p&gt;На днях помогал коллеге с настройкой автоматического бекапа
для конфигураций нашей активки (Cisco, Juniper), и нашел
весьма интересное решение (похоже, вообще единственное) -
&lt;a href="http://www.shrubbery.net/rancid/"&gt;rancid&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Точнее, его форк &lt;a href="https://github.com/dotwaffle/rancid-git"&gt;rancid-git&lt;/a&gt;,
поскольку использую везде и всюду git, и ради бекапов городить CVS или
Subversion было бы неудобно.&lt;/p&gt;
&lt;p&gt;Конечно, rancid этот - весьма оригинальный пример того, как с помощью
expect и bash-скриптов соорудить исправно работающее решение, отлично выполняющее
свою задачу. Если вкратце - оно по крону ходит …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Fri, 01 Nov 2013 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2013-11-01:/it/auto-backup-конфигов-активки-через-rancid/</guid><category>Rancid</category><category>Cisco</category><category>Juniper</category></item><item><title>Включил комментарии</title><link>http://bulimov.ru/it/%D0%92%D0%BA%D0%BB%D1%8E%D1%87%D0%B8%D0%BB-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%80%D0%B8%D0%B8/</link><description>&lt;p&gt;Включил комментирование через Disqus, может кто-то
что-нибудь дельное напишет в комментариях.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Fri, 18 Oct 2013 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2013-10-18:/it/Включил-комментарии/</guid><category>Жизнь</category><category>Ruhoh</category></item><item><title>Сдал экзамен на RHCE</title><link>http://bulimov.ru/it/%D0%A1%D0%B4%D0%B0%D0%BB-%D1%8D%D0%BA%D0%B7%D0%B0%D0%BC%D0%B5%D0%BD-%D0%BD%D0%B0-rhce/</link><description>&lt;p&gt;Наконец-то пришел результат экзамена, который сдавал в пятницу. 273 из 300 возможных при проходном балле в 210. Это, конечно,
неприятно - ждать все выходные результата. На RHCSA результат пришел в ту же пятницу около 8 вечера.&lt;/p&gt;
&lt;p&gt;По самому курсу "Системное Администрирование" и экзамену: читал у меня все три части курса Илья Соболев.
Курс весьма хорошо продуман и сбалансирован, ну и читает его Соболев отлично. С позиции человека,
который до этих курсов …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Mon, 14 Oct 2013 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2013-10-14:/it/Сдал-экзамен-на-rhce/</guid><category>Жизнь</category></item><item><title>О животных и NetworkManager</title><link>http://bulimov.ru/it/%D0%9E-%D0%B6%D0%B8%D0%B2%D0%BE%D1%82%D0%BD%D1%8B%D1%85-%D0%B8-networkmanager/</link><description>&lt;p&gt;В комментариях к &lt;a href="http://www.opennet.ru/opennews/art.shtml?num=38016"&gt; интервью с Алексеем Кузнецовым &lt;/a&gt;
прочитал прекрасное:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;NetworkManager плохой, а какая альтернатива?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ip addr add 12.34.56.78/24 dev eth0
ip ro add default via 12.34.56.1&lt;/p&gt;
&lt;p&gt;Если кому-то нужен какой-то гуй для этого - то он просто животное™.&lt;/p&gt;
&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Wed, 02 Oct 2013 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2013-10-02:/it/О-животных-и-networkmanager/</guid><category>Жизнь</category></item><item><title>Вернулся из отпуска</title><link>http://bulimov.ru/it/%D0%92%D0%B5%D1%80%D0%BD%D1%83%D0%BB%D1%81%D1%8F-%D0%B8%D0%B7-%D0%BE%D1%82%D0%BF%D1%83%D1%81%D0%BA%D0%B0/</link><description>&lt;p&gt;Вернулись с женой из отпуска, который провели в Индонезии.
Из IT-наблюдений: во всех отелях и кафе на Бали, Гили и Ломбоке
встречались мне только и исключительно железки Mikrotik в роли HotSpot.
Забавно видеть Linux-based решения от Латвийских разработчиков
в далекой Индонезии.
На ПК служащих - только Windows XP, никаких Вист и Семерок-восьмерок.&lt;/p&gt;
&lt;p&gt;Ну и самое ужасное - аэропорт города Денпасар, который на Бали - практически не
компьютеризирован. На посадочных талонах номер рейса и …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Tue, 01 Oct 2013 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2013-10-01:/it/Вернулся-из-отпуска/</guid><category>Жизнь</category><category>MikroTik</category></item><item><title>Как я управляю серверами</title><link>http://bulimov.ru/it/%D0%9A%D0%B0%D0%BA-%D1%8F-%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D1%8F%D1%8E-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B0%D0%BC%D0%B8/</link><description>&lt;p&gt;Решил вот описать принципы управления серверами, к которым пришел за эти 3 года.&lt;/p&gt;
&lt;p&gt;Итак:&lt;/p&gt;
&lt;h3&gt;принцип №1&lt;/h3&gt;
&lt;p&gt;Все конфиги лежат в &lt;a href="http://en.wikipedia.org/wiki/Revision_control"&gt;VCS&lt;/a&gt;, я сейчас использую Git.
Я думаю, в комментариях принцип не нуждается, необходимость централизованного
хранения конфигов, а также хранения истории изменений с возможностью отката обсуждалась не раз.&lt;/p&gt;
&lt;h3&gt;принцип №2&lt;/h3&gt;
&lt;p&gt;Все ПО ставится только из пакетов, никаких ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install.
Если пакета нужной версии нет в репозиториях дистрибутива - ищем готовый …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 05 Sep 2013 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2013-09-05:/it/Как-я-управляю-серверами/</guid><category>Ansible</category><category>Chef</category></item><item><title>Низкоуровневое обнаружение в Zabbix, ищем диски в контроллере от 3ware</title><link>http://bulimov.ru/it/%D0%9D%D0%B8%D0%B7%D0%BA%D0%BE%D1%83%D1%80%D0%BE%D0%B2%D0%BD%D0%B5%D0%B2%D0%BE%D0%B5-%D0%BE%D0%B1%D0%BD%D0%B0%D1%80%D1%83%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2-zabbix-%D0%B8%D1%89%D0%B5%D0%BC-%D0%B4%D0%B8%D1%81%D0%BA%D0%B8-%D0%B2-%D0%BA%D0%BE%D0%BD%D1%82%D1%80%D0%BE%D0%BB%D0%BB%D0%B5%D1%80%D0%B5-%D0%BE%D1%82-3ware/</link><description>&lt;p&gt;Я уже &lt;a href="/it/Низкоуровневое-обнаружение-в-zabbix"&gt; писал &lt;/a&gt; про &lt;a href="https://www.zabbix.com/documentation/ru/2.0/manual/discovery/low_level_discovery"&gt;низкоуровневое обнаружение&lt;/a&gt;
в Zabbix, так что повторять теорию не буду.&lt;/p&gt;
&lt;p&gt;Теперь мне понадобилось автоматом получать список хардов в массивах
на контроллерах 3ware, которыми оборудованы у нас многие сервера.&lt;/p&gt;
&lt;p&gt;Вести руками шаблоны для каждого сервера с иным порядком или количеством дисков
показалось мне плохой идеей, да и авто-обнаружение само напрашивалось.&lt;/p&gt;
&lt;p&gt;Вдохновлялся я утилитой 3ware-status, для работы авто-обнаружения нам потребуется
установленная утилита tw-cli, взять ее для Debian/Ubuntu …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Wed, 14 Aug 2013 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2013-08-14:/it/Низкоуровневое-обнаружение-в-zabbix-ищем-диски-в-контроллере-от-3ware/</guid><category>Zabbix</category><category>Python</category><category>Monitoring</category></item><item><title>О любви к программированию</title><link>http://bulimov.ru/it/%D0%9E-%D0%BB%D1%8E%D0%B1%D0%B2%D0%B8-%D0%BA-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8E/</link><description>&lt;p&gt;Хоть я и выбрал своей профессией системное администрирование,
программирование я люблю. Даже очень люблю.&lt;/p&gt;
&lt;p&gt;Вот решил написать историю моего знакомства с программированием.&lt;/p&gt;
&lt;h3&gt;Школа&lt;/h3&gt;
&lt;p&gt;Началось все в школе. Одноклассник ходил на курсы программирования,
готовясь поступать в какой-то технический вуз, и рассказывал про Delphi.
Рассказы его так меня увлекли, что я даже сподобился установить этот самый Delphi,
и даже создал какую-то форму, скопировав код из примеров, присланных одноклассником.
По итогу этих действий …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Thu, 25 Jul 2013 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2013-07-25:/it/О-любви-к-программированию/</guid><category>Программирование</category><category>Жизнь</category></item><item><title>Monitoring sucks!</title><link>http://bulimov.ru/it/monitoring-sucks/</link><description>&lt;p&gt;&lt;strong&gt;TL;DR - тут я Sensu критиковал, но в 2014 году успешно заменил Zabbix на Sensu версии 0.12+&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;В 2012 году появился в среде devops такой хештег, #monitoringsucks.
В сообщения с этим тегом devopsы писали, что текущее положение дел
в сфере мониторинга их не устраивает. Что именно - прекрасно иллюстрирует
&lt;a href="https://speakerdeck.com/obfuscurity/the-state-of-open-source-monitoring"&gt;эта презентация&lt;/a&gt;
Если вкратце - хочется людям некоего стандарта API для взаимодействия между компонентами
утилит мониторинга, ну и появления самих этих компонент …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Wed, 10 Jul 2013 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2013-07-10:/it/monitoring-sucks/</guid><category>Zabbix</category><category>Sensu</category><category>Monitoring</category><category>Мнение</category></item><item><title>Низкоуровневое обнаружение в Zabbix</title><link>http://bulimov.ru/it/%D0%9D%D0%B8%D0%B7%D0%BA%D0%BE%D1%83%D1%80%D0%BE%D0%B2%D0%BD%D0%B5%D0%B2%D0%BE%D0%B5-%D0%BE%D0%B1%D0%BD%D0%B0%D1%80%D1%83%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2-zabbix/</link><description>&lt;p&gt;В используемой мной системе мониторинга Zabbix, начиная с версии 2.0,
появилась такая любопытная штука, как &lt;a href="https://www.zabbix.com/documentation/ru/2.0/manual/discovery/low_level_discovery"&gt;низкоуровневое обнаружение&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Я не буду пересказывать содержимое документации, расскажу лучше о том, как я писал свой тип
обнаружения для мониторинга очередей RabbitMQ.&lt;/p&gt;
&lt;p&gt;Проблема в том, что очередей в RabbitMQ может быть много, и, по мере развития веб-проекта,
они меняются. Так что я решил обнаруживать их автоматически, и написал для этого свой провайдер
данных для …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Wed, 26 Jun 2013 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2013-06-26:/it/Низкоуровневое-обнаружение-в-zabbix/</guid><category>Zabbix</category><category>Python</category><category>Monitoring</category></item><item><title>Плагин к Ruhoh для рисования графиков</title><link>http://bulimov.ru/it/%D0%9F%D0%BB%D0%B0%D0%B3%D0%B8%D0%BD-%D0%BA-ruhoh-%D0%B4%D0%BB%D1%8F-%D1%80%D0%B8%D1%81%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%BE%D0%B2/</link><description>&lt;p&gt;Еще планируя создание статического блога на Hakyll я хотел реализовать рисование
графиков "на лету" из отдельно хранящихся данных. Но с Hakyll не сложилось,
и после долгих поисков я остановился на &lt;a href="http://ruhoh.com/"&gt;Ruhoh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Все нижеописанное относится к &lt;strong&gt;Ruhoh 2.1&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Цель&lt;/h3&gt;
&lt;p&gt;Рисовать графики из данных, хранящихся в человеко-читаемом виде.
Нужно мне это было для визуализации своих спортивных тренировок.&lt;/p&gt;
&lt;h3&gt;Решение&lt;/h3&gt;
&lt;p&gt;Конечно, я решил оформить все в виде плагина к Ruhoh, благо возможность такая …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Fri, 21 Jun 2013 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2013-06-21:/it/Плагин-к-ruhoh-для-рисования-графиков/</guid><category>Программирование</category><category>Ruby</category><category>Ruhoh</category></item><item><title>И снова пользователи</title><link>http://bulimov.ru/it/%D0%98-%D1%81%D0%BD%D0%BE%D0%B2%D0%B0-%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D0%B8/</link><description>&lt;p&gt;Я уже довольно давно понял, что не могу и не хочу работать с людьми,
и уже около года поддержкой пользователей не занимаюсь.
Однако сейчас наш офисный сисадмин в отпуске, и я вынужден снова этим заниматься.&lt;/p&gt;
&lt;p&gt;Вот, к примеру, сегодня подошла ко мне тетя с просьбой помочь в отправлении
с МФУ скана на email. Сам я этого никогда не делал, но сложности в этом не видел,
и потому заявил ей, что …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Wed, 19 Jun 2013 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2013-06-19:/it/И-снова-пользователи/</guid><category>Юзвери</category></item><item><title>Что я думаю о Debian на серверах</title><link>http://bulimov.ru/it/%D0%A7%D1%82%D0%BE-%D1%8F-%D0%B4%D1%83%D0%BC%D0%B0%D1%8E-%D0%BE-debian-%D0%BD%D0%B0-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B0%D1%85/</link><description>&lt;p&gt;С 2010 года, когда я только начал заниматься системным администрированием,
я использовал как основной серверный дистрибутив Debian.
Это был изначально осознанный выбор, и на момент написания заметки таковым и остается.
Конечно, я работал и с другими дистрибутивами, и потому мне есть и было с чем сравнить.
По итогам работы с Debian и написана эта заметка.&lt;/p&gt;
&lt;h1&gt;Негатив&lt;/h1&gt;
&lt;h2&gt;Общесистемные лимиты&lt;/h2&gt;
&lt;p&gt;В свое время, встала передо мной задача настройки под высокую нагрузку различных …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Tue, 18 Jun 2013 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2013-06-18:/it/Что-я-думаю-о-debian-на-серверах/</guid><category>Debian</category><category>Мнение</category></item><item><title>Мнение о Chef</title><link>http://bulimov.ru/it/%D0%9C%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%BE-chef/</link><description>&lt;p&gt;Я использовал Chef для управления IT-инфраструктурой около полутора лет, начав с
версии 0.10. Сначала, где-то пол-года, использовал только для управления конфигурациями,
без развертывания ПО с нуля. Затем, уже на другой работе, автоматизировал управления
конфигурациями и развертывание с нуля веб-проекта (30+ серверов, nginx, ruby, riak, redis,
sphinx-search, rabbitmq и т.п.).
Это позволило мне составить собственное мнение o достоинствах и недостатках Chef,
и в этой заметке я свое мнение излагаю …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Alexander Bulimov</dc:creator><pubDate>Mon, 17 Jun 2013 00:00:00 +0400</pubDate><guid isPermaLink="false">tag:bulimov.ru,2013-06-17:/it/Мнение-о-chef/</guid><category>Chef</category><category>Мнение</category></item></channel></rss>